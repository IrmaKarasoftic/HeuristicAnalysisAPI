using System;
using System.Collections.Generic;
using System.Data.Entity.Migrations;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace HeuristicAnalysis.Infrastructure.Database
{
    internal sealed class Configuration : DbMigrationsConfiguration<AppContext>
    {
        public Configuration()
        {
            AutomaticMigrationsEnabled = true;
        }

        protected override void Seed(AppContext context)
        {

            var heuristics = new List<Entities.Heuristic>()
            {
                new Entities.Heuristic { HeuristicTitle = "Vidljivost stanja sistema" , HeuristicText = "Potrebno je analizirati da li korisnik u svakom momentu raspolaže adekvatnim informacijama o trenutnom statusu. Pitanja za analizu: da li je jasno čemu služi ekran na kome se korisnik nalazi. Da li svaka korisnička akcija rezultira adekvatnom povratnom infromacijom ili očekivanom aktivnosti u aplikaciji. Da li se poruke upozorenja prikazuju na adekvatan način i dovoljno dugo. Da li su parametri sistema prikazani na odgovarajući način. Da li u slučaju dužeg trajanja neke operacije u aplikaciji postoji adekvatan progers indikator"},
                new Entities.Heuristic { HeuristicTitle = "Mapiranje sistema i realnog svijeta", HeuristicText = "Ocjeniti da li sistem predstavlja informacije i podatke jasno i logično. Pitanja zaanalizu: Da li se upotrebljavaju riječi, fraze, slike koji su razumljivi korisnicima.Da li su podaci / informacije prikazani na prirodan i logičan način.Ukoliko postoji kodiranje bojom, da li boje odgovaraju uobičajenim i očekivanim modelima i metaforama.Da li su datumi, decimalni brojevi, simboli, metričke jedinice prikazani na uobičajeni način.Da li su labele i nazivi na dugmadima(kontrolama) specifični za konkretnu funkciju, a ne generički.Da li dugmad(kontrole) sa sličnim nazivima indiciraju slične, a ne suprotne funkcije"},
                new Entities.Heuristic { HeuristicTitle = "Korisnička kontrola i sloboda", HeuristicText = "Da li sistem omogućava „sigurnu” navigaciju. Pitanja za analizu: Da li su obezbjeđene „UNDO” („CANCEL”) i „REDO” funkcije. Da li se pop - up forme otvaraju u modalnom stanju kada je to neophodno. Da li kod potencijalno „desktruktivnih ili opasnih” akcija(brisanje podataka, zaustavljanje funkcija, plaćanje) postoji dodatna korisnička potvrda. Da li korisnik može obustaviti aktivnost koja je u toku kada to ima smisla. Dkoliko aplikacija omogućava istovemeno otvaranje više aktivnih prozora koji se preklapaju, da li se može jednostavno prelaziti sa jednog na drugi. Da li je zabranjeno editovanje podataka u tabelama i poljima koja služe samo za prikaz" },
                new Entities.Heuristic { HeuristicTitle = "Konzistentnost i standardi", HeuristicText = "Potrebno je izbjeći rješenja u kojima se za istu stvar koriste različite riječi, kontrole, meniji ili slike.Pitanja za analizu: Da li se svi termini, kontrole, meniji koriste konzistentno.Da li su izbjegnuti višeznačni ili zbunjujući pojmovi i kontrole.Da li su kontrole za istu namjenu(na primjer dugme Back) identični i na istom mjestu kroz cijelu aplikaciju.Da li su nazivi i tekstovi u listama i tabelama poravnati ili centrirani konzistentno.Da li se tehnike za naglašavanje / razlikovanje koriste sa mjerom: do tri nivoa intenziteta iste boje, do 4 različite boje na jednoj formi, do 4 različite veličine istih komponenti, do tri različita fonta.Da li postoji legenda za prikaz složenih podataka koji nisu vizuelno jasni" },
                new Entities.Heuristic { HeuristicTitle = "Spriječavanje grešaka", HeuristicText = "Dobar dizajn onemogućava korisnika da pravi greške. Pitanja za analizu: Da li sistem osigurava da se napravljeni posao ne može poništiti jednostavnom, slučajnom korisničkom greškom. Da li postoje polja za unos podataka čiji format nije dovoljno jasan. Da li se umjesto unosa teksta od strane korisnika, upotrebljavaju liste ponuđenih odgovora gdje god je to moguće. Ukoliko postoje „opasne” akcije (upiti sa velikim brojem odgovora, brisanje), da li korisnik dobije upozorenje prije potvrde akcije." },
                new Entities.Heuristic { HeuristicTitle = "Prepoznati a ne učiti napamet", HeuristicText = "Sve akcije i opcije trebaju biti jasne i vidljive. Od korisnika ne treba očekivati da će pamtiti podatke iz jednog dijela sistema i koristiti ih u nekom drugom dijelu. Instrukcije za korištenje trebaju biti vidljive ili jednostavno dostupne gdje god je to potrebno. Pitanja za analizu: Da li su kontrole/komande jasne i vidljive (npr. iz labela – oznaka na komandama). Da li labele pozicionirane na komponentama ili dovoljno blizu komponenti na koje se odnose.Da li postoji jasna vizuelna razlika između izbornika kod kojih se može odabrati jedna stavka i izbornika kod kojih se može odabrati više stavki.Da li su neaktivne funkcije i komponente vizuelno različite od aktivnih.Da li su komponente grupisane logično i da li između grupa komponenti postoje separatori(linije, prazan prostor, okviri).Da li se različite veličine, boje, osjenčenja, boldiranja koriste da pokažu relativne odnose između pojedinih stavki na ekranu.Da li je veza između kontrola / komandi i akcija koje one proizvode jasna" },
                new Entities.Heuristic { HeuristicTitle = "Fleksibilnost i efikasnost", HeuristicText = "Dobar dizajn omogućava korištenje „kratica” koje mogu ubrzati složene akcije iskusnim korisnicima, dovoljno informacija novim korisnicima, brzo pretraživanje, jednostavan dostup do ključnih informacija. Pitanja za analizu: Da li ima dovoljno informacija-uputstava za one koji prvi put koriste sistem. Da li postoje „kratice” koje mogu koristiti iskusni korisnici. Da li se parcijalne akcije mogu pohraniti i nastaviti kasnije. Da li se pri unosu ili brisanju podataka mogu korisiti uobičajene kratice sa tastature (ctrl-C, ctrl-V,...). Da li se često korištene akcije mogu efikasno izvoditi navigacijom sa tastature bez korištenja miša ili trackpada. Da li je podržan autocomplete tamo gdje je to logično. Da li se stavka iz tabele ili na dijagramu može editovati dvostrukim klikom na samu stavku." },
                new Entities.Heuristic { HeuristicTitle = "Estetika i minimalistički dizajn", HeuristicText = "Potrebno je izbjeći suvišne informacije i podatke. Pitanja za analizu: Da li je dizajn u cjelini jednostavan, intuitivan i praktičan za korištenje. Da li u sistemu postoje informacije koje su nepotrebne ili nisu relevatne. Da li se jednostavno može zapamtiti kako se sistem koristi. Da li button-i imaju jasne labele. Da li slike imaju jasna značenja. Da li postoje grafički elementi koji se mogu izbaciti a da se ne naruši kvalitet i dizajn sistema." },
                new Entities.Heuristic { HeuristicTitle = "Prepoznavanje i oporavak od grešaka", HeuristicText = "Dobar dizajn korisniku sistema omogućava da jednostavno prepozna grešku i da anulira efekte pogrešne akcije. Informacije o greškama trebaju biti razumljive korisnicima sistema. Treba izbjegavati tehnički rječnik za error poruke. U slučaju greške korisniku treba sugerisati naredni korak. Pitanja za analizu: Da li se greške signaliziraju zvučnim efektima. Da li su poruke o nastalim greškama jasne. Da li se u porukama o nastalim greškama koriste umjerene formulacije, bez korištenja uzvičnika, grubih i napadnih izraza. Da li formulacija greške jasno opisuje ozbiljnost greške. Da li se korisniku sugeriše akcija nakon nastale greške. Ako aplikacija signalizira grešku pri unosu podatka, da je li cusror pozicioniran na polje koje je potrebno promijeniti. Da li se korisniku nudi mogućnost povratka na defaultne vrijednosti parametara." },
                new Entities.Heuristic { HeuristicTitle = "Pomoć i dokumentacija", HeuristicText = "Dobar dizajn uključuje odgovarajuću mjeru pomoći korisnicima. Korisnik ne treba biti „zatrpan” dokumentacijom ili informacijama, ali ne treba ostati bez ikakve pomoći. Pitanja za analizu: Da li postoji Help ili informacije o korištenju sistema. Da li su informacije pisane razmljivo, bez korištenja žargona ili lokalizama. Da li je pomoć korisniku raspoloživa na pravom mjestu i u dovoljnoj mjeri, na način da ne mora da prolazi krozi obimne pdf dokumente za svaku informaciju. Da li postoje ilustracije ili multimedijalni elementi helpa, a ne samo tekstualni zapis. Da li pri unosu podataka korisnik ima jasnu sliku o formatu i sadržaju koji se očekuje. Može li se korisnik jednostavno prebacivati sa help sekcije na radni dio aplikacije" }
            };
              context.HeuristicLists.AddOrUpdate(
                new Entities.HeuristicList { ListName = "Nielsens Heuristics", Heuristics = heuristics });
        }
    }
}
